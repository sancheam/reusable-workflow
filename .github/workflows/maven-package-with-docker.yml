
name: Maven Package With Docker
on:
  workflow_call:
    secrets:
      ROBOT_REGISTRY_USERNAME: ## Need prepare
        required: true
      ROBOT_REGISTRY_PASSWORD: ## Need prepare
        required: true  
    inputs:
      harbor_project:
        required: true
        type: string
      service_name:
        required: true
        type: string
      git_branch:
        required: true
        type: string
      git_sha_short:
        required: true
        type: string
      maven_extra_args:
        required: false
        type: string
      image_tag:
        required: true
        type: string
      docker-extra-args:  ## TODO validation
        required: false
        type: string
      setup_eventhub_truststore:
        required: false
        type: string
        default: 'false'
      eventhub_truststore_environment:
        required: false
        type: string
        default: NONPROD
        
jobs:
  maven_package_with_docker:
    env:
      REGISTRY_URL: registry-emea.app.corpintra.net
      EVENTHUB_TRUSTSTORE: EVENTHUB_TRUSTSTORE_${{ inputs.eventhub_truststore_environment }}
      EVENTHUB_KEYSTORE: EVENTHUB_KEYSTORE_${{ inputs.eventhub_truststore_environment }}
    runs-on: [road-runner, small]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.git_branch }}
          fetch-depth: 0
        
      - name: Git Pull
        run: git pull origin ${{ inputs.git_branch }}

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Maven Package
        run: mvn clean package ${{ inputs.maven_extra_args }}

        ## In future will copies both files, and control as environmnet variable to use which files
      - name: Get eventhub truststore file
        run: |
          if [[ '${{ inputs.setup_local_database }}' == 'true' ]]; then
            echo "${{ secrets[env.EVENTHUB_TRUSTSTORE] }}" | base64 --decode > truststore.p12
            echo "${{ secrets[env.EVENTHUB_KEYSTORE] }}" | base64 --decode > vsm.stockify.keystore.p12
            cp truststore.p12 src/main/resources/
            cp vsm.stockify.keystore.p12 src/main/resources/

            ls -lrt src/main/resources/
          fi

      - name: Docker Build and Push
        uses: action/docker-build-and-push@v3
        with:
          registry_url: $REGISTRY_URL
          username: ${{ secrets.ROBOT_REGISTRY_USERNAME }}
          password: ${{ secrets.ROBOT_REGISTRY_PASSWORD }}
          push: true
          context: ${{ github.workspace }}
          dockerfile_name: Dockerfile
          build_args: |
            ${{ inputs.docker-extra-args }}
          tags: |
            ${{ inputs.harbor_project }}/${{ inputs.service_name }}:${{ inputs.git_sha_short }}
            ${{ inputs.harbor_project }}/${{ inputs.service_name }}:${{ inputs.image_tag }}
