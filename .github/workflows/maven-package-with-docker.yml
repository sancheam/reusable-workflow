
name: Maven Package With Docker
on:
  workflow_call:
    secrets:
      ROBOT_REGISTRY_USERNAME:
        required: true
      ROBOT_REGISTRY_PASSWORD:
        required: true  
    inputs:
      harbor_project:
        required: true
        type: string
      service_name:
        required: true
        type: string
      git_branch:
        required: true
        type: string
      git_sha_short:
        required: true
        type: string
      maven_extra_args:
        required: false
        type: string
      git_tag:
        required: true
        type: string
      docker-extra-args:
        required: false
        type: string
    outputs:
      image_tag:
        value: ${{ jobs.maven_package_with_docker.outputs.image_tag }}
jobs:
  maven_package_with_docker:
    env:
      REGISTRY_URL: registry-emea.app.corpintra.net
    runs-on: [road-runner, small]
    outputs:
      image_tag: ${{ steps.docker_build_push.outputs.image_tag }} 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.git_branch }}
          fetch-depth: 0
        
      - name: Git Pull
        run: git pull origin ${{ inputs.git_branch }}

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Maven Package
        run: mvn clean package ${{ inputs.maven_extra_args }}

      - name: Docker Login
        env:
          ROBOT_REGISTRY_USERNAME: ${{ secrets.ROBOT_REGISTRY_USERNAME }}
          ROBOT_REGISTRY_PASSWORD: ${{ secrets.ROBOT_REGISTRY_PASSWORD }}
        run: |
          docker login -u="$ROBOT_REGISTRY_USERNAME" -p="$ROBOT_REGISTRY_PASSWORD" $REGISTRY_URL
        
      - name: Docker Build and Push
        id: docker_build_push
        run: |
          IMAGE_SHA=$REGISTRY_URL/${{ inputs.harbor_project }}/${{ inputs.service_name }}:${{ inputs.git_sha_short }}
          IMAGE_TAG=$REGISTRY_URL/${{ inputs.harbor_project }}/${{ inputs.service_name }}:${{ inputs.git_tag }}

          docker buildx build \ 
          --no-cache \
          ${{ inputs.docker-extra-args }} \
          --push -t $IMAGE_SHA -t $IMAGE_TAG ${PWD}

          echo "image_tag=$(echo $IMAGE_TAG)" >> $GITHUB_OUTPUT
